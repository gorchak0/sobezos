package service

import (
	"fmt"
	"sobezos/services/core-service/internal/models"
	"strings"
)

// TagClear —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ç–µ–≥–∏ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func (s *Service) TagClear(telegramID int) (string, error) {
	patch := models.UserState{
		TheoryTags:           []string{},
		CompletedTheoryTasks: []string{},
	}

	fmt.Printf("\n\n\n - bot-service - TagClear patch: %+v\n\n\n", patch)
	err := s.UserStateEdit(telegramID, patch)
	if err != nil {
		return "‚ö†Ô∏è–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–≥–æ–≤", err
	}

	// –ü–æ–≤—Ç–æ—Ä–Ω–æ —á–∏—Ç–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	updatedState, err := s.UserStateGet(telegramID)
	var allTags []string
	var completedTasks []string

	if err == nil && updatedState != nil {
		allTags = updatedState.TheoryTags
		completedTasks = updatedState.CompletedTheoryTasks
	}

	return fmt.Sprintf(
		"üßπ–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ç—ç–≥–æ–≤ –∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã\n\n–í–∞—à–∏ —Ç—ç–≥–∏\\: %s \n–í–∞—à–∏ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\\: %s",
		strings.Join(allTags, ", "),
		strings.Join(completedTasks, ", "),
	), nil
}
