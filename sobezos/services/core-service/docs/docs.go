// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/answerget": {
            "get": {
                "description": "Возвращает ответ на последний теоретический вопрос пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "answer"
                ],
                "summary": "Получить ответ на последний вопрос пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "telegram_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid telegram_id",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/tagclear": {
            "post": {
                "description": "Очищает все теги пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "Очистить теги пользователя",
                "parameters": [
                    {
                        "description": "Telegram ID пользователя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TagClearRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid body",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/tagget": {
            "get": {
                "description": "Получает список всех доступных тегов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "Получить список тегов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/tagset": {
            "post": {
                "description": "Добавляет новые теги пользователю (требуется telegram_id в заголовке)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "Установить теги пользователю",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "telegram_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Список тегов через запятую",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TagSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid telegram_id",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/taskadd": {
            "post": {
                "description": "Добавляет новую задачу (требуется telegram_id в заголовке)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Добавить задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "telegram_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "JSON задачи",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TaskAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid telegram_id",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/taskedit": {
            "put": {
                "description": "Редактирует существующую задачу (требуется telegram_id в заголовке)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Редактировать задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "telegram_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "JSON задачи для редактирования",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TaskEditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid telegram_id",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/taskget": {
            "get": {
                "description": "Получает задачу для пользователя с учетом его тегов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Получить задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "telegram_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid telegram_id",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/taskgetid": {
            "get": {
                "description": "Получает задачу по её ID для пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Получить задачу по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "telegram_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "args",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid telegram_id",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/useradd": {
            "post": {
                "description": "Добавляет нового пользователя (требуется telegram_id администратора в заголовке)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Добавить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "telegram_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Аргументы для добавления пользователя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CommonSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid admin telegram_id",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        },
        "/usercheck": {
            "get": {
                "description": "Проверяет существование пользователя и возвращает его роль и username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Проверить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "telegram_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserCheckResponse"
                        }
                    },
                    "400": {
                        "description": "invalid telegram_id",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/models.CommonErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CommonErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.CommonSuccessResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "models.TagClearRequest": {
            "type": "object",
            "properties": {
                "telegram_id": {
                    "type": "integer"
                }
            }
        },
        "models.TagSetRequest": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "string"
                }
            }
        },
        "models.TaskAddRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.TaskEditRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.UserAddRequest": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "string"
                }
            }
        },
        "models.UserCheckResponse": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8083",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "SOBEZOS API",
	Description:      "Это пример API с использованием Swaggo",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
